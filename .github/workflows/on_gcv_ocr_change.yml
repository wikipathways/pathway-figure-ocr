name: Handle GCV OCR changes

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - gcv-ocr/PMC*.json

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  # inspired by https://dev.to/scienta/get-changed-files-in-github-actions-1p36
  changed:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      added: ${{ steps.changes.outputs.added }}
      modified: ${{ steps.changes.outputs.modified }}
      copied: ${{ steps.changes.outputs.copied }}
      deleted: ${{ steps.changes.outputs.deleted }}
      renamed: ${{ steps.changes.outputs.renamed }}
    steps:
        # Make sure we have some code to diff.
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changes
        # Set outputs using the command.
        run: |
          echo "Files were changed in pull request ${{ github.event.before }} -> ${{ github.event.after }}"
          
          echo "::set-output name=added::$(git diff --name-only --diff-filter=A ${{ github.event.before }} ${{ github.event.after }} | grep -e 'gcv-ocr/PMC.*\.json$' | xargs)"
          if git diff --name-only --diff-filter=A ${{ github.event.before }} ${{ github.event.after }} | grep -e 'gcv-ocr/PMC.*\.json$'; then
            echo 'added:'
            git diff --name-only --diff-filter=A ${{ github.event.before }} ${{ github.event.after }} | grep -e 'gcv-ocr/PMC.*\.json$'
          fi
          
          echo "::set-output name=modified::$(git diff --name-only --diff-filter=M ${{ github.event.before }} ${{ github.event.after }} | grep -e 'gcv-ocr/PMC.*\.json$' | xargs)"
          if git diff --name-only --diff-filter=M ${{ github.event.before }} ${{ github.event.after }} | grep -e 'gcv-ocr/PMC.*\.json$'; then
            echo 'modified:'
            git diff --name-only --diff-filter=M ${{ github.event.before }} ${{ github.event.after }} | grep -e 'gcv-ocr/PMC.*\.json$'
          fi
          
          echo "::set-output name=copied::$(git diff --name-only --diff-filter=C ${{ github.event.before }} ${{ github.event.after }} | grep -e 'gcv-ocr/PMC.*\.json$' | xargs)"
          if git diff --name-only --diff-filter=C ${{ github.event.before }} ${{ github.event.after }} | grep -e 'gcv-ocr/PMC.*\.json$'; then
            echo 'copied:'
            git diff --name-only --diff-filter=C ${{ github.event.before }} ${{ github.event.after }} | grep -e 'gcv-ocr/PMC.*\.json$'
          fi

          echo "::set-output name=deleted::$(git diff --name-only --diff-filter=D ${{ github.event.before }} ${{ github.event.after }} | grep -e 'gcv-ocr/PMC.*\.json$' | xargs)"
          if git diff --name-only --diff-filter=D ${{ github.event.before }} ${{ github.event.after }} | grep -e 'gcv-ocr/PMC.*\.json$'; then
            echo 'deleted:'
            git diff --name-only --diff-filter=D ${{ github.event.before }} ${{ github.event.after }} | grep -e 'gcv-ocr/PMC.*\.json$'
          fi
            
          echo "::set-output name=renamed::$(git diff --name-only --diff-filter=R ${{ github.event.before }} ${{ github.event.after }} | grep -e 'gcv-ocr/PMC.*\.json$' | xargs)"
          if git diff --name-only --diff-filter=R ${{ github.event.before }} ${{ github.event.after }} | grep -e 'gcv-ocr/PMC.*\.json$'; then
            echo 'renamed:'
            git diff --name-only --diff-filter=R ${{ github.event.before }} ${{ github.event.after }} | grep -e 'gcv-ocr/PMC.*\.json$'
          fi
          
  pubtator:
    runs-on: ubuntu-latest
    needs: [changed]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          
      - name: Install deps
        run: |
          pip install requests unidecode
          
      - name: PubTator chemical extraction
        run: |
          if [ ! -e pubtator-chemical ]; then
            mkdir pubtator-chemical
          fi
          
          for f in ${{needs.changed.outputs.modified}}; do
            f_name="$(basename ""$f"")"
            if [ -e pubtator-chemical/"$f_name" ]; then
              echo "$f was modified. removing pubtator-chemical/$f_name."
              rm pubtator-chemical/"$f_name"
            fi
          done

          for f in ${{needs.changed.outputs.deleted}}; do
            f_name="$(basename ""$f"")"
            if [ -e pubtator-chemical/"$f_name" ]; then
              echo "$f was deleted. removing pubtator-chemical/$f_name."
              rm pubtator-chemical/"$f_name"
            fi
          done

          echo 'pubtator-chemical count before:'
          ls -1 pubtator-chemical | wc -l
          
          python code/pubtator.py chemical
          
          echo 'pubtator-chemical count after:'
          ls -1 pubtator-chemical | wc -l
          
      - name: PubTator disease extraction
        run: |
          if [ ! -e pubtator-disease ]; then
            mkdir pubtator-disease
          fi
          
          for f in ${{needs.changed.outputs.modified}}; do
            f_name="$(basename ""$f"")"
            if [ -e pubtator-disease/"$f_name" ]; then
              echo "$f was modified. removing pubtator-disease/$f_name."
              rm pubtator-disease/"$f_name"
            fi
          done
          
          for f in ${{needs.changed.outputs.deleted}}; do
            f_name="$(basename ""$f"")"
            if [ -e pubtator-disease/"$f_name" ]; then
              echo "$f was deleted. removing pubtator-disease/$f_name."
              rm pubtator-disease/"$f_name"
            fi
          done          

          echo 'pubtator-disease count before:'
          ls -1 pubtator-disease | wc -l
          
          python code/pubtator.py disease
          
          echo 'pubtator-disease count after:'
          ls -1 pubtator-disease | wc -l

      - name: Commit report
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git add pubtator-chemical/PMC*.json
          git add pubtator-disease/PMC*.json
          if git diff --exit-code --staged; then
              echo "No changes"
          else
              git pull
              git commit -m 'Update PubTator chemical & disease extractions'
              git push
          fi
